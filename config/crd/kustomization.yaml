commonLabels:
  # NOTE(chrism): This maps the contract between capi and the provider version.
  # It must be set for the provider types to be used by cluster-api. When new
  # versions of the cabpc types are created, this must be updated.
  cluster.x-k8s.io/v1alpha3: v1alpha1
  cluster.x-k8s.io/v1alpha3: v1alpha2

# This kustomization.yaml is not intended to be run by itself,
# since it depends on service name and namespace that are out of this kustomize package.
# It should be run by config/default
resources:
- bases/bootstrap.cluster.x-k8s.io_critconfigs.yaml
- bases/controlplane.cluster.x-k8s.io_critcontrolplanes.yaml
- bases/bootstrap.cluster.x-k8s.io_critconfigtemplates.yaml
# +kubebuilder:scaffold:crdkustomizeresource

patchesStrategicMerge:
# [WEBHOOK] To enable webhook, uncomment all the sections with [WEBHOOK] prefix.
# patches here are for enabling the conversion webhook for each CRD
- patches/webhook_in_critconfigs.yaml
- patches/webhook_in_critcontrolplanes.yaml
- patches/webhook_in_critconfigtemplates.yaml
# +kubebuilder:scaffold:crdkustomizewebhookpatch

# [CERTMANAGER] To enable webhook, uncomment all the sections with [CERTMANAGER] prefix.
# patches here are for enabling the CA injection for each CRD
- patches/cainjection_in_critconfigs.yaml
- patches/cainjection_in_critcontrolplanes.yaml
- patches/cainjection_in_critconfigtemplates.yaml
# +kubebuilder:scaffold:crdkustomizecainjectionpatch

# the following config is for teaching kustomize how to do kustomization for CRDs.
configurations:
- kustomizeconfig.yaml
