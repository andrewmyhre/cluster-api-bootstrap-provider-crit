
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: critconfigtemplates.bootstrap.cluster.x-k8s.io
spec:
  group: bootstrap.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: CritConfigTemplate
    listKind: CritConfigTemplateList
    plural: critconfigtemplates
    singular: critconfigtemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CritConfigTemplate is the Schema for the critconfigtemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CritConfigTemplateSpec defines the desired state of CritConfigTemplate
            properties:
              template:
                description: CritConfigTemplateResource defines the Template structure
                properties:
                  spec:
                    description: CritConfigSpec defines the desired state of CritConfig
                    properties:
                      controlPlaneConfiguration:
                        description: ControlPlaneConfiguration specifies the crit configuration used for control plane nodes.
                        properties:
                          apiServerURL:
                            description: APIServerURL is the kube-apiserver URL.
                            type: string
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          clusterName:
                            description: 'ClusterName Default: "crit"'
                            type: string
                          controlPlaneEndpoint:
                            description: ControlPlaneEndpoint is the IP address or DNS name that represents the control plane.
                            type: string
                          coreDNSVersion:
                            type: string
                          critBootstrapServer:
                            properties:
                              bindPort:
                                type: integer
                              cloudProvider:
                                type: string
                              extraArgs:
                                additionalProperties:
                                  type: string
                                type: object
                              imageRegistry:
                                description: 'TODO(chrism): maybe add option to disable'
                                type: string
                              version:
                                type: string
                            type: object
                          etcd:
                            properties:
                              caFile:
                                type: string
                              caKey:
                                description: CAKey is the etcd CA private key. It is only used to encrypt e2db tables, so any file containing data to be used as a secret can be provided here to enable e2db table encryption for shared cluster files.
                                type: string
                              certFile:
                                type: string
                              endpoints:
                                items:
                                  type: string
                                type: array
                              keyFile:
                                type: string
                            type: object
                          kind:
                            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          kubeAPIServer:
                            properties:
                              bindPort:
                                type: integer
                              extraArgs:
                                additionalProperties:
                                  type: string
                                type: object
                              extraSans:
                                items:
                                  type: string
                                type: array
                              extraVolumes:
                                items:
                                  description: HostPathMount contains elements describing volumes that are mounted from the host.
                                  properties:
                                    hostPath:
                                      description: HostPath is the path in the host that will be mounted inside the pod.
                                      type: string
                                    hostPathType:
                                      type: string
                                    mountPath:
                                      description: MountPath is the path inside the pod where hostPath will be mounted.
                                      type: string
                                    name:
                                      description: Name of the volume inside the pod template.
                                      type: string
                                    readOnly:
                                      description: ReadOnly controls write access to the volume
                                      type: boolean
                                  type: object
                                type: array
                              featureGates:
                                additionalProperties:
                                  type: boolean
                                type: object
                            type: object
                          kubeControllerManager:
                            properties:
                              extraArgs:
                                additionalProperties:
                                  type: string
                                type: object
                              extraVolumes:
                                items:
                                  description: HostPathMount contains elements describing volumes that are mounted from the host.
                                  properties:
                                    hostPath:
                                      description: HostPath is the path in the host that will be mounted inside the pod.
                                      type: string
                                    hostPathType:
                                      type: string
                                    mountPath:
                                      description: MountPath is the path inside the pod where hostPath will be mounted.
                                      type: string
                                    name:
                                      description: Name of the volume inside the pod template.
                                      type: string
                                    readOnly:
                                      description: ReadOnly controls write access to the volume
                                      type: boolean
                                  type: object
                                type: array
                              featureGates:
                                additionalProperties:
                                  type: boolean
                                type: object
                            type: object
                          kubeScheduler:
                            properties:
                              extraArgs:
                                additionalProperties:
                                  type: string
                                type: object
                              extraVolumes:
                                items:
                                  description: HostPathMount contains elements describing volumes that are mounted from the host.
                                  properties:
                                    hostPath:
                                      description: HostPath is the path in the host that will be mounted inside the pod.
                                      type: string
                                    hostPathType:
                                      type: string
                                    mountPath:
                                      description: MountPath is the path inside the pod where hostPath will be mounted.
                                      type: string
                                    name:
                                      description: Name of the volume inside the pod template.
                                      type: string
                                    readOnly:
                                      description: ReadOnly controls write access to the volume
                                      type: boolean
                                  type: object
                                type: array
                              featureGates:
                                additionalProperties:
                                  type: boolean
                                type: object
                            type: object
                          node:
                            properties:
                              cloudProvider:
                                type: string
                              containerRuntime:
                                type: string
                              dnsDomain:
                                type: string
                              hostIPv4:
                                type: string
                              hostname:
                                type: string
                              kubeDir:
                                type: string
                              kubeProxyMode:
                                type: string
                              kubelet:
                                description: KubeletConfiguration contains the configuration for the Kubelet
                                properties:
                                  address:
                                    description: 'address is the IP address for the Kubelet to serve on (set to 0.0.0.0 for all interfaces). Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Default: "0.0.0.0"'
                                    type: string
                                  allowedUnsafeSysctls:
                                    description: 'A comma separated whitelist of unsafe sysctls or sysctl patterns (ending in *). Unsafe sysctl groups are kernel.shm*, kernel.msg*, kernel.sem, fs.mqueue.*, and net.*. These sysctls are namespaced but not allowed by default.  For example: "kernel.msg*,net.ipv4.route.min_pmtu" Default: []'
                                    items:
                                      type: string
                                    type: array
                                  apiVersion:
                                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                    type: string
                                  authentication:
                                    description: 'authentication specifies how requests to the Kubelet''s server are authenticated Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Defaults:   anonymous:     enabled: false   webhook:     enabled: true     cacheTTL: "2m"'
                                    properties:
                                      anonymous:
                                        description: anonymous contains settings related to anonymous authentication
                                        properties:
                                          enabled:
                                            description: enabled allows anonymous requests to the kubelet server. Requests that are not rejected by another authentication method are treated as anonymous requests. Anonymous requests have a username of system:anonymous, and a group name of system:unauthenticated.
                                            type: boolean
                                        type: object
                                      webhook:
                                        description: webhook contains settings related to webhook bearer token authentication
                                        properties:
                                          cacheTTL:
                                            description: cacheTTL enables caching of authentication results
                                            type: string
                                          enabled:
                                            description: enabled allows bearer token authentication backed by the tokenreviews.authentication.k8s.io API
                                            type: boolean
                                        type: object
                                      x509:
                                        description: x509 contains settings related to x509 client certificate authentication
                                        properties:
                                          clientCAFile:
                                            description: clientCAFile is the path to a PEM-encoded certificate bundle. If set, any request presenting a client certificate signed by one of the authorities in the bundle is authenticated with a username corresponding to the CommonName, and groups corresponding to the Organization in the client certificate.
                                            type: string
                                        type: object
                                    type: object
                                  authorization:
                                    description: 'authorization specifies how requests to the Kubelet''s server are authorized Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Defaults:   mode: Webhook   webhook:     cacheAuthorizedTTL: "5m"     cacheUnauthorizedTTL: "30s"'
                                    properties:
                                      mode:
                                        description: mode is the authorization mode to apply to requests to the kubelet server. Valid values are AlwaysAllow and Webhook. Webhook mode uses the SubjectAccessReview API to determine authorization.
                                        type: string
                                      webhook:
                                        description: webhook contains settings related to Webhook authorization.
                                        properties:
                                          cacheAuthorizedTTL:
                                            description: cacheAuthorizedTTL is the duration to cache 'authorized' responses from the webhook authorizer.
                                            type: string
                                          cacheUnauthorizedTTL:
                                            description: cacheUnauthorizedTTL is the duration to cache 'unauthorized' responses from the webhook authorizer.
                                            type: string
                                        type: object
                                    type: object
                                  cgroupDriver:
                                    description: 'driver that the kubelet uses to manipulate cgroups on the host (cgroupfs or systemd) Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: "cgroupfs"'
                                    type: string
                                  cgroupRoot:
                                    description: 'cgroupRoot is the root cgroup to use for pods. This is handled by the container runtime on a best effort basis. Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: ""'
                                    type: string
                                  cgroupsPerQOS:
                                    description: 'Enable QoS based Cgroup hierarchy: top level cgroups for QoS Classes And all Burstable and BestEffort pods are brought up under their specific top level QoS cgroup. Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: true'
                                    type: boolean
                                  clusterDNS:
                                    description: 'clusterDNS is a list of IP addresses for the cluster DNS server. If set, kubelet will configure all containers to use this for DNS resolution instead of the host''s DNS servers. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that changes will only take effect on Pods created after the update. Draining the node is recommended before changing this field. Default: nil'
                                    items:
                                      type: string
                                    type: array
                                  clusterDomain:
                                    description: 'clusterDomain is the DNS domain for this cluster. If set, kubelet will configure all containers to search this domain in addition to the host''s search domains. Dynamic Kubelet Config (beta): Dynamically updating this field is not recommended, as it should be kept in sync with the rest of the cluster. Default: ""'
                                    type: string
                                  configMapAndSecretChangeDetectionStrategy:
                                    description: 'ConfigMapAndSecretChangeDetectionStrategy is a mode in which config map and secret managers are running. Default: "Watch"'
                                    type: string
                                  containerLogMaxFiles:
                                    description: 'Maximum number of container log files that can be present for a container. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that lowering it may cause log files to be deleted. Default: 5'
                                    format: int32
                                    type: integer
                                  containerLogMaxSize:
                                    description: 'A quantity defines the maximum size of the container log file before it is rotated. For example: "5Mi" or "256Ki". Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may trigger log rotation. Default: "10Mi"'
                                    type: string
                                  contentType:
                                    description: 'contentType is contentType of requests sent to apiserver. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact the ability for the Kubelet to communicate with the API server. If the Kubelet loses contact with the API server due to a change to this field, the change cannot be reverted via dynamic Kubelet config. Default: "application/vnd.kubernetes.protobuf"'
                                    type: string
                                  cpuCFSQuota:
                                    description: 'cpuCFSQuota enables CPU CFS quota enforcement for containers that specify CPU limits. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that disabling it may reduce node stability. Default: true'
                                    type: boolean
                                  cpuCFSQuotaPeriod:
                                    description: 'CPUCFSQuotaPeriod is the CPU CFS quota period value, cpu.cfs_period_us. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that limits set for containers will result in different cpu.cfs_quota settings. This will trigger container restarts on the node being reconfigured. Default: "100ms"'
                                    type: string
                                  cpuManagerPolicy:
                                    description: 'CPUManagerPolicy is the name of the policy to use. Requires the CPUManager feature gate to be enabled. Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: "none"'
                                    type: string
                                  cpuManagerReconcilePeriod:
                                    description: 'CPU Manager reconciliation period. Requires the CPUManager feature gate to be enabled. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that shortening the period may carry a performance impact. Default: "10s"'
                                    type: string
                                  enableContentionProfiling:
                                    description: 'enableContentionProfiling enables lock contention profiling, if enableDebuggingHandlers is true. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that enabling it may carry a performance impact. Default: false'
                                    type: boolean
                                  enableControllerAttachDetach:
                                    description: 'enableControllerAttachDetach enables the Attach/Detach controller to manage attachment/detachment of volumes scheduled to this node, and disables kubelet from executing any attach/detach operations Dynamic Kubelet Config (beta): If dynamically updating this field, consider that changing which component is responsible for volume management on a live node may result in volumes refusing to detach if the node is not drained prior to the update, and if Pods are scheduled to the node before the volumes.kubernetes.io/controller-managed-attach-detach annotation is updated by the Kubelet. In general, it is safest to leave this value set the same as local config. Default: true'
                                    type: boolean
                                  enableDebuggingHandlers:
                                    description: 'enableDebuggingHandlers enables server endpoints for log access and local running of containers and commands, including the exec, attach, logs, and portforward features. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that disabling it may disrupt components that interact with the Kubelet server. Default: true'
                                    type: boolean
                                  enforceNodeAllocatable:
                                    description: 'This flag specifies the various Node Allocatable enforcements that Kubelet needs to perform. This flag accepts a list of options. Acceptable options are `none`, `pods`, `system-reserved` & `kube-reserved`. If `none` is specified, no other options may be specified. Refer to [Node Allocatable](https://git.k8s.io/community/contributors/design-proposals/node/node-allocatable.md) doc for more information. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that removing enforcements may reduce the stability of the node. Alternatively, adding enforcements may reduce the stability of components which were using more than the reserved amount of resources; for example, enforcing kube-reserved may cause Kubelets to OOM if it uses more than the reserved resources, and enforcing system-reserved may cause system daemons to OOM if they use more than the reserved resources. Default: ["pods"]'
                                    items:
                                      type: string
                                    type: array
                                  eventBurst:
                                    description: 'eventBurst is the maximum size of a burst of event creations, temporarily allows event creations to burst to this number, while still not exceeding eventRecordQPS. Only used if eventRecordQPS > 0. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact scalability by changing the amount of traffic produced by event creations. Default: 10'
                                    format: int32
                                    type: integer
                                  eventRecordQPS:
                                    description: 'eventRecordQPS is the maximum event creations per second. If 0, there is no limit enforced. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact scalability by changing the amount of traffic produced by event creations. Default: 5'
                                    format: int32
                                    type: integer
                                  evictionHard:
                                    additionalProperties:
                                      type: string
                                    description: 'Map of signal names to quantities that defines hard eviction thresholds. For example: {"memory.available": "300Mi"}. To explicitly disable, pass a 0% or 100% threshold on an arbitrary resource. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may trigger or delay Pod evictions. Default:   memory.available:  "100Mi"   nodefs.available:  "10%"   nodefs.inodesFree: "5%"   imagefs.available: "15%"'
                                    type: object
                                  evictionMaxPodGracePeriod:
                                    description: 'Maximum allowed grace period (in seconds) to use when terminating pods in response to a soft eviction threshold being met. This value effectively caps the Pod''s TerminationGracePeriodSeconds value during soft evictions. Note: Due to issue #64530, the behavior has a bug where this value currently just overrides the grace period during soft eviction, which can increase the grace period from what is set on the Pod. This bug will be fixed in a future release. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that lowering it decreases the amount of time Pods will have to gracefully clean up before being killed during a soft eviction. Default: 0'
                                    format: int32
                                    type: integer
                                  evictionMinimumReclaim:
                                    additionalProperties:
                                      type: string
                                    description: 'Map of signal names to quantities that defines minimum reclaims, which describe the minimum amount of a given resource the kubelet will reclaim when performing a pod eviction while that resource is under pressure. For example: {"imagefs.available": "2Gi"} Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may change how well eviction can manage resource pressure. Default: nil'
                                    type: object
                                  evictionPressureTransitionPeriod:
                                    description: 'Duration for which the kubelet has to wait before transitioning out of an eviction pressure condition. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that lowering it may decrease the stability of the node when the node is overcommitted. Default: "5m"'
                                    type: string
                                  evictionSoft:
                                    additionalProperties:
                                      type: string
                                    description: 'Map of signal names to quantities that defines soft eviction thresholds. For example: {"memory.available": "300Mi"}. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may trigger or delay Pod evictions, and may change the allocatable reported by the node. Default: nil'
                                    type: object
                                  evictionSoftGracePeriod:
                                    additionalProperties:
                                      type: string
                                    description: 'Map of signal names to quantities that defines grace periods for each soft eviction signal. For example: {"memory.available": "30s"}. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may trigger or delay Pod evictions. Default: nil'
                                    type: object
                                  failSwapOn:
                                    description: 'failSwapOn tells the Kubelet to fail to start if swap is enabled on the node. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that setting it to true will cause the Kubelet to crash-loop if swap is enabled. Default: true'
                                    type: boolean
                                  featureGates:
                                    additionalProperties:
                                      type: boolean
                                    description: 'featureGates is a map of feature names to bools that enable or disable alpha/experimental features. This field modifies piecemeal the built-in default values from "k8s.io/kubernetes/pkg/features/kube_features.go". Dynamic Kubelet Config (beta): If dynamically updating this field, consider the documentation for the features you are enabling or disabling. While we encourage feature developers to make it possible to dynamically enable and disable features, some changes may require node reboots, and some features may require careful coordination to retroactively disable. Default: nil'
                                    type: object
                                  fileCheckFrequency:
                                    description: 'fileCheckFrequency is the duration between checking config files for new data Dynamic Kubelet Config (beta): If dynamically updating this field, consider that shortening the duration will cause the Kubelet to reload local Static Pod configurations more frequently, which may have a negative performance impact. Default: "20s"'
                                    type: string
                                  hairpinMode:
                                    description: 'hairpinMode specifies how the Kubelet should configure the container bridge for hairpin packets. Setting this flag allows endpoints in a Service to loadbalance back to themselves if they should try to access their own Service. Values:   "promiscuous-bridge": make the container bridge promiscuous.   "hairpin-veth":       set the hairpin flag on container veth interfaces.   "none":               do nothing. Generally, one must set --hairpin-mode=hairpin-veth to achieve hairpin NAT, because promiscuous-bridge assumes the existence of a container bridge named cbr0. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may require a node reboot, depending on the network plugin. Default: "promiscuous-bridge"'
                                    type: string
                                  healthzBindAddress:
                                    description: 'healthzBindAddress is the IP address for the healthz server to serve on Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that monitor Kubelet health. Default: "127.0.0.1"'
                                    type: string
                                  healthzPort:
                                    description: 'healthzPort is the port of the localhost healthz endpoint (set to 0 to disable) Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that monitor Kubelet health. Default: 10248'
                                    format: int32
                                    type: integer
                                  httpCheckFrequency:
                                    description: 'httpCheckFrequency is the duration between checking http for new data Dynamic Kubelet Config (beta): If dynamically updating this field, consider that shortening the duration will cause the Kubelet to poll staticPodURL more frequently, which may have a negative performance impact. Default: "20s"'
                                    type: string
                                  imageGCHighThresholdPercent:
                                    description: 'imageGCHighThresholdPercent is the percent of disk usage after which image garbage collection is always run. The percent is calculated as this field value out of 100. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may trigger or delay garbage collection, and may change the image overhead on the node. Default: 85'
                                    format: int32
                                    type: integer
                                  imageGCLowThresholdPercent:
                                    description: 'imageGCLowThresholdPercent is the percent of disk usage before which image garbage collection is never run. Lowest disk usage to garbage collect to. The percent is calculated as this field value out of 100. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may trigger or delay garbage collection, and may change the image overhead on the node. Default: 80'
                                    format: int32
                                    type: integer
                                  imageMinimumGCAge:
                                    description: 'imageMinimumGCAge is the minimum age for an unused image before it is garbage collected. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may trigger or delay garbage collection, and may change the image overhead on the node. Default: "2m"'
                                    type: string
                                  iptablesDropBit:
                                    description: 'iptablesDropBit is the bit of the iptables fwmark space to mark for dropping packets. Values must be within the range [0, 31]. Must be different from other mark bits. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it needs to be coordinated with other components, like kube-proxy, and the update will only be effective if MakeIPTablesUtilChains is enabled. Default: 15'
                                    format: int32
                                    type: integer
                                  iptablesMasqueradeBit:
                                    description: 'iptablesMasqueradeBit is the bit of the iptables fwmark space to mark for SNAT Values must be within the range [0, 31]. Must be different from other mark bits. Warning: Please match the value of the corresponding parameter in kube-proxy. TODO: clean up IPTablesMasqueradeBit in kube-proxy Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it needs to be coordinated with other components, like kube-proxy, and the update will only be effective if MakeIPTablesUtilChains is enabled. Default: 14'
                                    format: int32
                                    type: integer
                                  kind:
                                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  kubeAPIBurst:
                                    description: 'kubeAPIBurst is the burst to allow while talking with kubernetes apiserver Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact scalability by changing the amount of traffic the Kubelet sends to the API server. Default: 10'
                                    format: int32
                                    type: integer
                                  kubeAPIQPS:
                                    description: 'kubeAPIQPS is the QPS to use while talking with kubernetes apiserver Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact scalability by changing the amount of traffic the Kubelet sends to the API server. Default: 5'
                                    format: int32
                                    type: integer
                                  kubeReserved:
                                    additionalProperties:
                                      type: string
                                    description: 'A set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=150G) pairs that describe resources reserved for kubernetes system components. Currently cpu, memory and local storage for root file system are supported. See http://kubernetes.io/docs/user-guide/compute-resources for more detail. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may not be possible to increase the reserved resources, because this requires resizing cgroups. Always look for a NodeAllocatableEnforced event after updating this field to ensure that the update was successful. Default: nil'
                                    type: object
                                  kubeReservedCgroup:
                                    description: 'This flag helps kubelet identify absolute name of top level cgroup used to enforce `KubeReserved` compute resource reservation for Kubernetes node system daemons. Refer to [Node Allocatable](https://git.k8s.io/community/contributors/design-proposals/node/node-allocatable.md) doc for more information. Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: ""'
                                    type: string
                                  kubeletCgroups:
                                    description: 'kubeletCgroups is the absolute name of cgroups to isolate the kubelet in Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: ""'
                                    type: string
                                  makeIPTablesUtilChains:
                                    description: 'If true, Kubelet ensures a set of iptables rules are present on host. These rules will serve as utility rules for various components, e.g. KubeProxy. The rules will be created based on IPTablesMasqueradeBit and IPTablesDropBit. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that disabling it will prevent the Kubelet from healing locally misconfigured iptables rules. Default: true'
                                    type: boolean
                                  maxOpenFiles:
                                    description: 'maxOpenFiles is Number of files that can be opened by Kubelet process. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact the ability of the Kubelet to interact with the node''s filesystem. Default: 1000000'
                                    format: int64
                                    type: integer
                                  maxPods:
                                    description: 'maxPods is the number of pods that can run on this Kubelet. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that changes may cause Pods to fail admission on Kubelet restart, and may change the value reported in Node.Status.Capacity[v1.ResourcePods], thus affecting future scheduling decisions. Increasing this value may also decrease performance, as more Pods can be packed into a single node. Default: 110'
                                    format: int32
                                    type: integer
                                  nodeLeaseDurationSeconds:
                                    description: 'nodeLeaseDurationSeconds is the duration the Kubelet will set on its corresponding Lease, when the NodeLease feature is enabled. This feature provides an indicator of node health by having the Kubelet create and periodically renew a lease, named after the node, in the kube-node-lease namespace. If the lease expires, the node can be considered unhealthy. The lease is currently renewed every 10s, per KEP-0009. In the future, the lease renewal interval may be set based on the lease duration. Requires the NodeLease feature gate to be enabled. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that decreasing the duration may reduce tolerance for issues that temporarily prevent the Kubelet from renewing the lease (e.g. a short-lived network issue). Default: 40'
                                    format: int32
                                    type: integer
                                  nodeStatusReportFrequency:
                                    description: 'nodeStatusReportFrequency is the frequency that kubelet posts node status to master if node status does not change. Kubelet will ignore this frequency and post node status immediately if any change is detected. It is only used when node lease feature is enabled. nodeStatusReportFrequency''s default value is 1m. But if nodeStatusUpdateFrequency is set explicitly, nodeStatusReportFrequency''s default value will be set to nodeStatusUpdateFrequency for backward compatibility. Default: "1m"'
                                    type: string
                                  nodeStatusUpdateFrequency:
                                    description: 'nodeStatusUpdateFrequency is the frequency that kubelet computes node status. If node lease feature is not enabled, it is also the frequency that kubelet posts node status to master. Note: When node lease feature is not enabled, be cautious when changing the constant, it must work with nodeMonitorGracePeriod in nodecontroller. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact node scalability, and also that the node controller''s nodeMonitorGracePeriod must be set to N*NodeStatusUpdateFrequency, where N is the number of retries before the node controller marks the node unhealthy. Default: "10s"'
                                    type: string
                                  oomScoreAdj:
                                    description: 'oomScoreAdj is The oom-score-adj value for kubelet process. Values must be within the range [-1000, 1000]. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact the stability of nodes under memory pressure. Default: -999'
                                    format: int32
                                    type: integer
                                  podCIDR:
                                    description: 'The CIDR to use for pod IP addresses, only used in standalone mode. In cluster mode, this is obtained from the master. Dynamic Kubelet Config (beta): This field should always be set to the empty default. It should only set for standalone Kubelets, which cannot use Dynamic Kubelet Config. Default: ""'
                                    type: string
                                  podPidsLimit:
                                    description: 'PodPidsLimit is the maximum number of pids in any pod. Requires the SupportPodPidsLimit feature gate to be enabled. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that lowering it may prevent container processes from forking after the change. Default: -1'
                                    format: int64
                                    type: integer
                                  podsPerCore:
                                    description: 'podsPerCore is the maximum number of pods per core. Cannot exceed MaxPods. If 0, this field is ignored. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that changes may cause Pods to fail admission on Kubelet restart, and may change the value reported in Node.Status.Capacity[v1.ResourcePods], thus affecting future scheduling decisions. Increasing this value may also decrease performance, as more Pods can be packed into a single node. Default: 0'
                                    format: int32
                                    type: integer
                                  port:
                                    description: 'port is the port for the Kubelet to serve on. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Default: 10250'
                                    format: int32
                                    type: integer
                                  protectKernelDefaults:
                                    description: 'protectKernelDefaults, if true, causes the Kubelet to error if kernel flags are not as it expects. Otherwise the Kubelet will attempt to modify kernel flags to match its expectation. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that enabling it may cause the Kubelet to crash-loop if the Kernel is not configured as Kubelet expects. Default: false'
                                    type: boolean
                                  qosReserved:
                                    additionalProperties:
                                      type: string
                                    description: 'qosReserved is a set of resource name to percentage pairs that specify the minimum percentage of a resource reserved for exclusive use by the guaranteed QoS tier. Currently supported resources: "memory" Requires the QOSReserved feature gate to be enabled. Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: nil'
                                    type: object
                                  readOnlyPort:
                                    description: 'readOnlyPort is the read-only port for the Kubelet to serve on with no authentication/authorization. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Default: 0 (disabled)'
                                    format: int32
                                    type: integer
                                  registryBurst:
                                    description: 'registryBurst is the maximum size of bursty pulls, temporarily allows pulls to burst to this number, while still not exceeding registryPullQPS. Only used if registryPullQPS > 0. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact scalability by changing the amount of traffic produced by image pulls. Default: 10'
                                    format: int32
                                    type: integer
                                  registryPullQPS:
                                    description: 'registryPullQPS is the limit of registry pulls per second. Set to 0 for no limit. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact scalability by changing the amount of traffic produced by image pulls. Default: 5'
                                    format: int32
                                    type: integer
                                  reservedSystemCPUs:
                                    description: This ReservedSystemCPUs option specifies the cpu list reserved for the host level system threads and kubernetes related threads. This provide a "static" CPU list rather than the "dynamic" list by system-reserved and kube-reserved. This option overwrites CPUs provided by system-reserved and kube-reserved.
                                    type: string
                                  resolvConf:
                                    description: 'ResolverConfig is the resolver configuration file used as the basis for the container DNS resolution configuration. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that changes will only take effect on Pods created after the update. Draining the node is recommended before changing this field. Default: "/etc/resolv.conf"'
                                    type: string
                                  rotateCertificates:
                                    description: 'rotateCertificates enables client certificate rotation. The Kubelet will request a new certificate from the certificates.k8s.io API. This requires an approver to approve the certificate signing requests. The RotateKubeletClientCertificate feature must be enabled. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that disabling it may disrupt the Kubelet''s ability to authenticate with the API server after the current certificate expires. Default: false'
                                    type: boolean
                                  runtimeRequestTimeout:
                                    description: 'runtimeRequestTimeout is the timeout for all runtime requests except long running requests - pull, logs, exec and attach. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Default: "2m"'
                                    type: string
                                  serializeImagePulls:
                                    description: 'serializeImagePulls when enabled, tells the Kubelet to pull images one at a time. We recommend *not* changing the default value on nodes that run docker daemon with version  < 1.9 or an Aufs storage backend. Issue #10959 has more details. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact the performance of image pulls. Default: true'
                                    type: boolean
                                  serverTLSBootstrap:
                                    description: 'serverTLSBootstrap enables server certificate bootstrap. Instead of self signing a serving certificate, the Kubelet will request a certificate from the certificates.k8s.io API. This requires an approver to approve the certificate signing requests. The RotateKubeletServerCertificate feature must be enabled. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that disabling it will stop the renewal of Kubelet server certificates, which can disrupt components that interact with the Kubelet server in the long term, due to certificate expiration. Default: false'
                                    type: boolean
                                  showHiddenMetricsForVersion:
                                    description: 'The previous version for which you want to show hidden metrics. Only the previous minor version is meaningful, other values will not be allowed. The format is <major>.<minor>, e.g.: ''1.16''. The purpose of this format is make sure you have the opportunity to notice if the next release hides additional metrics, rather than being surprised when they are permanently removed in the release after that. Default: ""'
                                    type: string
                                  staticPodPath:
                                    description: 'staticPodPath is the path to the directory containing local (static) pods to run, or the path to a single static pod file. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that the set of static pods specified at the new path may be different than the ones the Kubelet initially started with, and this may disrupt your node. Default: ""'
                                    type: string
                                  staticPodURL:
                                    description: 'staticPodURL is the URL for accessing static pods to run Dynamic Kubelet Config (beta): If dynamically updating this field, consider that the set of static pods specified at the new URL may be different than the ones the Kubelet initially started with, and this may disrupt your node. Default: ""'
                                    type: string
                                  staticPodURLHeader:
                                    additionalProperties:
                                      items:
                                        type: string
                                      type: array
                                    description: 'staticPodURLHeader is a map of slices with HTTP headers to use when accessing the podURL Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt the ability to read the latest set of static pods from StaticPodURL. Default: nil'
                                    type: object
                                  streamingConnectionIdleTimeout:
                                    description: 'streamingConnectionIdleTimeout is the maximum time a streaming connection can be idle before the connection is automatically closed. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact components that rely on infrequent updates over streaming connections to the Kubelet server. Default: "4h"'
                                    type: string
                                  syncFrequency:
                                    description: 'syncFrequency is the max period between synchronizing running containers and config. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that shortening this duration may have a negative performance impact, especially as the number of Pods on the node increases. Alternatively, increasing this duration will result in longer refresh times for ConfigMaps and Secrets. Default: "1m"'
                                    type: string
                                  systemCgroups:
                                    description: 'systemCgroups is absolute name of cgroups in which to place all non-kernel processes that are not already in a container. Empty for no container. Rolling back the flag requires a reboot. Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: ""'
                                    type: string
                                  systemReserved:
                                    additionalProperties:
                                      type: string
                                    description: 'systemReserved is a set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=150G) pairs that describe resources reserved for non-kubernetes components. Currently only cpu and memory are supported. See http://kubernetes.io/docs/user-guide/compute-resources for more detail. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may not be possible to increase the reserved resources, because this requires resizing cgroups. Always look for a NodeAllocatableEnforced event after updating this field to ensure that the update was successful. Default: nil'
                                    type: object
                                  systemReservedCgroup:
                                    description: 'This flag helps kubelet identify absolute name of top level cgroup used to enforce `SystemReserved` compute resource reservation for OS system daemons. Refer to [Node Allocatable](https://git.k8s.io/community/contributors/design-proposals/node/node-allocatable.md) doc for more information. Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: ""'
                                    type: string
                                  tlsCertFile:
                                    description: 'tlsCertFile is the file containing x509 Certificate for HTTPS. (CA cert, if any, concatenated after server cert). If tlsCertFile and tlsPrivateKeyFile are not provided, a self-signed certificate and key are generated for the public address and saved to the directory passed to the Kubelet''s --cert-dir flag. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Default: ""'
                                    type: string
                                  tlsCipherSuites:
                                    description: 'TLSCipherSuites is the list of allowed cipher suites for the server. Values are from tls package constants (https://golang.org/pkg/crypto/tls/#pkg-constants). Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Default: nil'
                                    items:
                                      type: string
                                    type: array
                                  tlsMinVersion:
                                    description: 'TLSMinVersion is the minimum TLS version supported. Values are from tls package constants (https://golang.org/pkg/crypto/tls/#pkg-constants). Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Default: ""'
                                    type: string
                                  tlsPrivateKeyFile:
                                    description: 'tlsPrivateKeyFile is the file containing x509 private key matching tlsCertFile Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Default: ""'
                                    type: string
                                  topologyManagerPolicy:
                                    description: 'TopologyManagerPolicy is the name of the policy to use. Policies other than "none" require the TopologyManager feature gate to be enabled. Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: "none"'
                                    type: string
                                  volumeStatsAggPeriod:
                                    description: 'How frequently to calculate and cache volume disk usage for all pods Dynamic Kubelet Config (beta): If dynamically updating this field, consider that shortening the period may carry a performance impact. Default: "1m"'
                                    type: string
                                type: object
                              kubeletExtraArgs:
                                additionalProperties:
                                  type: string
                                type: object
                              kubernetesVersion:
                                type: string
                              podSubnet:
                                type: string
                              serviceSubnet:
                                type: string
                              taints:
                                items:
                                  description: The node this Taint is attached to has the "effect" on any pod that does not tolerate the Taint.
                                  properties:
                                    effect:
                                      description: Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
                                      type: string
                                    key:
                                      description: Required. The taint key to be applied to a node.
                                      type: string
                                    timeAdded:
                                      description: TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.
                                      format: date-time
                                      type: string
                                    value:
                                      description: The taint value corresponding to the taint key.
                                      type: string
                                  required:
                                  - effect
                                  - key
                                  type: object
                                type: array
                            type: object
                          verbosity:
                            type: integer
                        type: object
                      files:
                        description: Files specifies extra files to be passed to user_data upon creation.
                        items:
                          description: File defines the input for generating write_files in cloud-init.
                          properties:
                            content:
                              description: Content is the actual content of the file.
                              type: string
                            encoding:
                              description: Encoding specifies the encoding of the file contents.
                              enum:
                              - base64
                              - gzip
                              - gzip+base64
                              type: string
                            owner:
                              description: Owner specifies the ownership of the file, e.g. "root:root".
                              type: string
                            path:
                              description: Path specifies the full path on disk where to store the file.
                              type: string
                            permissions:
                              description: Permissions specifies the permissions to assign to the file, e.g. "0640".
                              type: string
                          required:
                          - content
                          - path
                          type: object
                        type: array
                      format:
                        description: Format specifies the output format of the bootstrap data
                        enum:
                        - cloud-config
                        type: string
                      ntp:
                        description: NTP specifies NTP configuration
                        properties:
                          enabled:
                            description: Enabled specifies whether NTP should be enabled
                            type: boolean
                          servers:
                            description: Servers specifies which NTP servers to use
                            items:
                              type: string
                            type: array
                        type: object
                      postCritCommands:
                        description: PostCritCommands specifies extra commands to run after crit runs
                        items:
                          type: string
                        type: array
                      preCritCommands:
                        description: PreCritCommands specifies extra commands to run before crit runs
                        items:
                          type: string
                        type: array
                      users:
                        description: Users specifies extra users to add
                        items:
                          description: User defines the input for a generated user in cloud-init.
                          properties:
                            gecos:
                              description: Gecos specifies the gecos to use for the user
                              type: string
                            groups:
                              description: Groups specifies the additional groups for the user
                              type: string
                            homeDir:
                              description: HomeDir specifies the home directory to use for the user
                              type: string
                            inactive:
                              description: Inactive specifies whether to mark the user as inactive
                              type: boolean
                            lockPassword:
                              description: LockPassword specifies if password login should be disabled
                              type: boolean
                            name:
                              description: Name specifies the user name
                              type: string
                            passwd:
                              description: Passwd specifies a hashed password for the user
                              type: string
                            primaryGroup:
                              description: PrimaryGroup specifies the primary group for the user
                              type: string
                            shell:
                              description: Shell specifies the user's shell
                              type: string
                            sshAuthorizedKeys:
                              description: SSHAuthorizedKeys specifies a list of ssh authorized keys for the user
                              items:
                                type: string
                              type: array
                            sudo:
                              description: Sudo specifies a sudo role for the user
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      verbosity:
                        type: boolean
                      workerConfiguration:
                        description: WorkerConfiguration specifies the crit configuration used for worker nodes.
                        properties:
                          apiServerURL:
                            type: string
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          bootstrapServerURL:
                            type: string
                          bootstrapToken:
                            type: string
                          caCert:
                            type: string
                          clusterName:
                            type: string
                          controlPlaneEndpoint:
                            type: string
                          kind:
                            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          node:
                            properties:
                              cloudProvider:
                                type: string
                              containerRuntime:
                                type: string
                              dnsDomain:
                                type: string
                              hostIPv4:
                                type: string
                              hostname:
                                type: string
                              kubeDir:
                                type: string
                              kubeProxyMode:
                                type: string
                              kubelet:
                                description: KubeletConfiguration contains the configuration for the Kubelet
                                properties:
                                  address:
                                    description: 'address is the IP address for the Kubelet to serve on (set to 0.0.0.0 for all interfaces). Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Default: "0.0.0.0"'
                                    type: string
                                  allowedUnsafeSysctls:
                                    description: 'A comma separated whitelist of unsafe sysctls or sysctl patterns (ending in *). Unsafe sysctl groups are kernel.shm*, kernel.msg*, kernel.sem, fs.mqueue.*, and net.*. These sysctls are namespaced but not allowed by default.  For example: "kernel.msg*,net.ipv4.route.min_pmtu" Default: []'
                                    items:
                                      type: string
                                    type: array
                                  apiVersion:
                                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                    type: string
                                  authentication:
                                    description: 'authentication specifies how requests to the Kubelet''s server are authenticated Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Defaults:   anonymous:     enabled: false   webhook:     enabled: true     cacheTTL: "2m"'
                                    properties:
                                      anonymous:
                                        description: anonymous contains settings related to anonymous authentication
                                        properties:
                                          enabled:
                                            description: enabled allows anonymous requests to the kubelet server. Requests that are not rejected by another authentication method are treated as anonymous requests. Anonymous requests have a username of system:anonymous, and a group name of system:unauthenticated.
                                            type: boolean
                                        type: object
                                      webhook:
                                        description: webhook contains settings related to webhook bearer token authentication
                                        properties:
                                          cacheTTL:
                                            description: cacheTTL enables caching of authentication results
                                            type: string
                                          enabled:
                                            description: enabled allows bearer token authentication backed by the tokenreviews.authentication.k8s.io API
                                            type: boolean
                                        type: object
                                      x509:
                                        description: x509 contains settings related to x509 client certificate authentication
                                        properties:
                                          clientCAFile:
                                            description: clientCAFile is the path to a PEM-encoded certificate bundle. If set, any request presenting a client certificate signed by one of the authorities in the bundle is authenticated with a username corresponding to the CommonName, and groups corresponding to the Organization in the client certificate.
                                            type: string
                                        type: object
                                    type: object
                                  authorization:
                                    description: 'authorization specifies how requests to the Kubelet''s server are authorized Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Defaults:   mode: Webhook   webhook:     cacheAuthorizedTTL: "5m"     cacheUnauthorizedTTL: "30s"'
                                    properties:
                                      mode:
                                        description: mode is the authorization mode to apply to requests to the kubelet server. Valid values are AlwaysAllow and Webhook. Webhook mode uses the SubjectAccessReview API to determine authorization.
                                        type: string
                                      webhook:
                                        description: webhook contains settings related to Webhook authorization.
                                        properties:
                                          cacheAuthorizedTTL:
                                            description: cacheAuthorizedTTL is the duration to cache 'authorized' responses from the webhook authorizer.
                                            type: string
                                          cacheUnauthorizedTTL:
                                            description: cacheUnauthorizedTTL is the duration to cache 'unauthorized' responses from the webhook authorizer.
                                            type: string
                                        type: object
                                    type: object
                                  cgroupDriver:
                                    description: 'driver that the kubelet uses to manipulate cgroups on the host (cgroupfs or systemd) Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: "cgroupfs"'
                                    type: string
                                  cgroupRoot:
                                    description: 'cgroupRoot is the root cgroup to use for pods. This is handled by the container runtime on a best effort basis. Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: ""'
                                    type: string
                                  cgroupsPerQOS:
                                    description: 'Enable QoS based Cgroup hierarchy: top level cgroups for QoS Classes And all Burstable and BestEffort pods are brought up under their specific top level QoS cgroup. Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: true'
                                    type: boolean
                                  clusterDNS:
                                    description: 'clusterDNS is a list of IP addresses for the cluster DNS server. If set, kubelet will configure all containers to use this for DNS resolution instead of the host''s DNS servers. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that changes will only take effect on Pods created after the update. Draining the node is recommended before changing this field. Default: nil'
                                    items:
                                      type: string
                                    type: array
                                  clusterDomain:
                                    description: 'clusterDomain is the DNS domain for this cluster. If set, kubelet will configure all containers to search this domain in addition to the host''s search domains. Dynamic Kubelet Config (beta): Dynamically updating this field is not recommended, as it should be kept in sync with the rest of the cluster. Default: ""'
                                    type: string
                                  configMapAndSecretChangeDetectionStrategy:
                                    description: 'ConfigMapAndSecretChangeDetectionStrategy is a mode in which config map and secret managers are running. Default: "Watch"'
                                    type: string
                                  containerLogMaxFiles:
                                    description: 'Maximum number of container log files that can be present for a container. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that lowering it may cause log files to be deleted. Default: 5'
                                    format: int32
                                    type: integer
                                  containerLogMaxSize:
                                    description: 'A quantity defines the maximum size of the container log file before it is rotated. For example: "5Mi" or "256Ki". Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may trigger log rotation. Default: "10Mi"'
                                    type: string
                                  contentType:
                                    description: 'contentType is contentType of requests sent to apiserver. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact the ability for the Kubelet to communicate with the API server. If the Kubelet loses contact with the API server due to a change to this field, the change cannot be reverted via dynamic Kubelet config. Default: "application/vnd.kubernetes.protobuf"'
                                    type: string
                                  cpuCFSQuota:
                                    description: 'cpuCFSQuota enables CPU CFS quota enforcement for containers that specify CPU limits. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that disabling it may reduce node stability. Default: true'
                                    type: boolean
                                  cpuCFSQuotaPeriod:
                                    description: 'CPUCFSQuotaPeriod is the CPU CFS quota period value, cpu.cfs_period_us. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that limits set for containers will result in different cpu.cfs_quota settings. This will trigger container restarts on the node being reconfigured. Default: "100ms"'
                                    type: string
                                  cpuManagerPolicy:
                                    description: 'CPUManagerPolicy is the name of the policy to use. Requires the CPUManager feature gate to be enabled. Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: "none"'
                                    type: string
                                  cpuManagerReconcilePeriod:
                                    description: 'CPU Manager reconciliation period. Requires the CPUManager feature gate to be enabled. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that shortening the period may carry a performance impact. Default: "10s"'
                                    type: string
                                  enableContentionProfiling:
                                    description: 'enableContentionProfiling enables lock contention profiling, if enableDebuggingHandlers is true. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that enabling it may carry a performance impact. Default: false'
                                    type: boolean
                                  enableControllerAttachDetach:
                                    description: 'enableControllerAttachDetach enables the Attach/Detach controller to manage attachment/detachment of volumes scheduled to this node, and disables kubelet from executing any attach/detach operations Dynamic Kubelet Config (beta): If dynamically updating this field, consider that changing which component is responsible for volume management on a live node may result in volumes refusing to detach if the node is not drained prior to the update, and if Pods are scheduled to the node before the volumes.kubernetes.io/controller-managed-attach-detach annotation is updated by the Kubelet. In general, it is safest to leave this value set the same as local config. Default: true'
                                    type: boolean
                                  enableDebuggingHandlers:
                                    description: 'enableDebuggingHandlers enables server endpoints for log access and local running of containers and commands, including the exec, attach, logs, and portforward features. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that disabling it may disrupt components that interact with the Kubelet server. Default: true'
                                    type: boolean
                                  enforceNodeAllocatable:
                                    description: 'This flag specifies the various Node Allocatable enforcements that Kubelet needs to perform. This flag accepts a list of options. Acceptable options are `none`, `pods`, `system-reserved` & `kube-reserved`. If `none` is specified, no other options may be specified. Refer to [Node Allocatable](https://git.k8s.io/community/contributors/design-proposals/node/node-allocatable.md) doc for more information. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that removing enforcements may reduce the stability of the node. Alternatively, adding enforcements may reduce the stability of components which were using more than the reserved amount of resources; for example, enforcing kube-reserved may cause Kubelets to OOM if it uses more than the reserved resources, and enforcing system-reserved may cause system daemons to OOM if they use more than the reserved resources. Default: ["pods"]'
                                    items:
                                      type: string
                                    type: array
                                  eventBurst:
                                    description: 'eventBurst is the maximum size of a burst of event creations, temporarily allows event creations to burst to this number, while still not exceeding eventRecordQPS. Only used if eventRecordQPS > 0. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact scalability by changing the amount of traffic produced by event creations. Default: 10'
                                    format: int32
                                    type: integer
                                  eventRecordQPS:
                                    description: 'eventRecordQPS is the maximum event creations per second. If 0, there is no limit enforced. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact scalability by changing the amount of traffic produced by event creations. Default: 5'
                                    format: int32
                                    type: integer
                                  evictionHard:
                                    additionalProperties:
                                      type: string
                                    description: 'Map of signal names to quantities that defines hard eviction thresholds. For example: {"memory.available": "300Mi"}. To explicitly disable, pass a 0% or 100% threshold on an arbitrary resource. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may trigger or delay Pod evictions. Default:   memory.available:  "100Mi"   nodefs.available:  "10%"   nodefs.inodesFree: "5%"   imagefs.available: "15%"'
                                    type: object
                                  evictionMaxPodGracePeriod:
                                    description: 'Maximum allowed grace period (in seconds) to use when terminating pods in response to a soft eviction threshold being met. This value effectively caps the Pod''s TerminationGracePeriodSeconds value during soft evictions. Note: Due to issue #64530, the behavior has a bug where this value currently just overrides the grace period during soft eviction, which can increase the grace period from what is set on the Pod. This bug will be fixed in a future release. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that lowering it decreases the amount of time Pods will have to gracefully clean up before being killed during a soft eviction. Default: 0'
                                    format: int32
                                    type: integer
                                  evictionMinimumReclaim:
                                    additionalProperties:
                                      type: string
                                    description: 'Map of signal names to quantities that defines minimum reclaims, which describe the minimum amount of a given resource the kubelet will reclaim when performing a pod eviction while that resource is under pressure. For example: {"imagefs.available": "2Gi"} Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may change how well eviction can manage resource pressure. Default: nil'
                                    type: object
                                  evictionPressureTransitionPeriod:
                                    description: 'Duration for which the kubelet has to wait before transitioning out of an eviction pressure condition. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that lowering it may decrease the stability of the node when the node is overcommitted. Default: "5m"'
                                    type: string
                                  evictionSoft:
                                    additionalProperties:
                                      type: string
                                    description: 'Map of signal names to quantities that defines soft eviction thresholds. For example: {"memory.available": "300Mi"}. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may trigger or delay Pod evictions, and may change the allocatable reported by the node. Default: nil'
                                    type: object
                                  evictionSoftGracePeriod:
                                    additionalProperties:
                                      type: string
                                    description: 'Map of signal names to quantities that defines grace periods for each soft eviction signal. For example: {"memory.available": "30s"}. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may trigger or delay Pod evictions. Default: nil'
                                    type: object
                                  failSwapOn:
                                    description: 'failSwapOn tells the Kubelet to fail to start if swap is enabled on the node. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that setting it to true will cause the Kubelet to crash-loop if swap is enabled. Default: true'
                                    type: boolean
                                  featureGates:
                                    additionalProperties:
                                      type: boolean
                                    description: 'featureGates is a map of feature names to bools that enable or disable alpha/experimental features. This field modifies piecemeal the built-in default values from "k8s.io/kubernetes/pkg/features/kube_features.go". Dynamic Kubelet Config (beta): If dynamically updating this field, consider the documentation for the features you are enabling or disabling. While we encourage feature developers to make it possible to dynamically enable and disable features, some changes may require node reboots, and some features may require careful coordination to retroactively disable. Default: nil'
                                    type: object
                                  fileCheckFrequency:
                                    description: 'fileCheckFrequency is the duration between checking config files for new data Dynamic Kubelet Config (beta): If dynamically updating this field, consider that shortening the duration will cause the Kubelet to reload local Static Pod configurations more frequently, which may have a negative performance impact. Default: "20s"'
                                    type: string
                                  hairpinMode:
                                    description: 'hairpinMode specifies how the Kubelet should configure the container bridge for hairpin packets. Setting this flag allows endpoints in a Service to loadbalance back to themselves if they should try to access their own Service. Values:   "promiscuous-bridge": make the container bridge promiscuous.   "hairpin-veth":       set the hairpin flag on container veth interfaces.   "none":               do nothing. Generally, one must set --hairpin-mode=hairpin-veth to achieve hairpin NAT, because promiscuous-bridge assumes the existence of a container bridge named cbr0. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may require a node reboot, depending on the network plugin. Default: "promiscuous-bridge"'
                                    type: string
                                  healthzBindAddress:
                                    description: 'healthzBindAddress is the IP address for the healthz server to serve on Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that monitor Kubelet health. Default: "127.0.0.1"'
                                    type: string
                                  healthzPort:
                                    description: 'healthzPort is the port of the localhost healthz endpoint (set to 0 to disable) Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that monitor Kubelet health. Default: 10248'
                                    format: int32
                                    type: integer
                                  httpCheckFrequency:
                                    description: 'httpCheckFrequency is the duration between checking http for new data Dynamic Kubelet Config (beta): If dynamically updating this field, consider that shortening the duration will cause the Kubelet to poll staticPodURL more frequently, which may have a negative performance impact. Default: "20s"'
                                    type: string
                                  imageGCHighThresholdPercent:
                                    description: 'imageGCHighThresholdPercent is the percent of disk usage after which image garbage collection is always run. The percent is calculated as this field value out of 100. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may trigger or delay garbage collection, and may change the image overhead on the node. Default: 85'
                                    format: int32
                                    type: integer
                                  imageGCLowThresholdPercent:
                                    description: 'imageGCLowThresholdPercent is the percent of disk usage before which image garbage collection is never run. Lowest disk usage to garbage collect to. The percent is calculated as this field value out of 100. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may trigger or delay garbage collection, and may change the image overhead on the node. Default: 80'
                                    format: int32
                                    type: integer
                                  imageMinimumGCAge:
                                    description: 'imageMinimumGCAge is the minimum age for an unused image before it is garbage collected. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may trigger or delay garbage collection, and may change the image overhead on the node. Default: "2m"'
                                    type: string
                                  iptablesDropBit:
                                    description: 'iptablesDropBit is the bit of the iptables fwmark space to mark for dropping packets. Values must be within the range [0, 31]. Must be different from other mark bits. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it needs to be coordinated with other components, like kube-proxy, and the update will only be effective if MakeIPTablesUtilChains is enabled. Default: 15'
                                    format: int32
                                    type: integer
                                  iptablesMasqueradeBit:
                                    description: 'iptablesMasqueradeBit is the bit of the iptables fwmark space to mark for SNAT Values must be within the range [0, 31]. Must be different from other mark bits. Warning: Please match the value of the corresponding parameter in kube-proxy. TODO: clean up IPTablesMasqueradeBit in kube-proxy Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it needs to be coordinated with other components, like kube-proxy, and the update will only be effective if MakeIPTablesUtilChains is enabled. Default: 14'
                                    format: int32
                                    type: integer
                                  kind:
                                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  kubeAPIBurst:
                                    description: 'kubeAPIBurst is the burst to allow while talking with kubernetes apiserver Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact scalability by changing the amount of traffic the Kubelet sends to the API server. Default: 10'
                                    format: int32
                                    type: integer
                                  kubeAPIQPS:
                                    description: 'kubeAPIQPS is the QPS to use while talking with kubernetes apiserver Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact scalability by changing the amount of traffic the Kubelet sends to the API server. Default: 5'
                                    format: int32
                                    type: integer
                                  kubeReserved:
                                    additionalProperties:
                                      type: string
                                    description: 'A set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=150G) pairs that describe resources reserved for kubernetes system components. Currently cpu, memory and local storage for root file system are supported. See http://kubernetes.io/docs/user-guide/compute-resources for more detail. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may not be possible to increase the reserved resources, because this requires resizing cgroups. Always look for a NodeAllocatableEnforced event after updating this field to ensure that the update was successful. Default: nil'
                                    type: object
                                  kubeReservedCgroup:
                                    description: 'This flag helps kubelet identify absolute name of top level cgroup used to enforce `KubeReserved` compute resource reservation for Kubernetes node system daemons. Refer to [Node Allocatable](https://git.k8s.io/community/contributors/design-proposals/node/node-allocatable.md) doc for more information. Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: ""'
                                    type: string
                                  kubeletCgroups:
                                    description: 'kubeletCgroups is the absolute name of cgroups to isolate the kubelet in Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: ""'
                                    type: string
                                  makeIPTablesUtilChains:
                                    description: 'If true, Kubelet ensures a set of iptables rules are present on host. These rules will serve as utility rules for various components, e.g. KubeProxy. The rules will be created based on IPTablesMasqueradeBit and IPTablesDropBit. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that disabling it will prevent the Kubelet from healing locally misconfigured iptables rules. Default: true'
                                    type: boolean
                                  maxOpenFiles:
                                    description: 'maxOpenFiles is Number of files that can be opened by Kubelet process. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact the ability of the Kubelet to interact with the node''s filesystem. Default: 1000000'
                                    format: int64
                                    type: integer
                                  maxPods:
                                    description: 'maxPods is the number of pods that can run on this Kubelet. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that changes may cause Pods to fail admission on Kubelet restart, and may change the value reported in Node.Status.Capacity[v1.ResourcePods], thus affecting future scheduling decisions. Increasing this value may also decrease performance, as more Pods can be packed into a single node. Default: 110'
                                    format: int32
                                    type: integer
                                  nodeLeaseDurationSeconds:
                                    description: 'nodeLeaseDurationSeconds is the duration the Kubelet will set on its corresponding Lease, when the NodeLease feature is enabled. This feature provides an indicator of node health by having the Kubelet create and periodically renew a lease, named after the node, in the kube-node-lease namespace. If the lease expires, the node can be considered unhealthy. The lease is currently renewed every 10s, per KEP-0009. In the future, the lease renewal interval may be set based on the lease duration. Requires the NodeLease feature gate to be enabled. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that decreasing the duration may reduce tolerance for issues that temporarily prevent the Kubelet from renewing the lease (e.g. a short-lived network issue). Default: 40'
                                    format: int32
                                    type: integer
                                  nodeStatusReportFrequency:
                                    description: 'nodeStatusReportFrequency is the frequency that kubelet posts node status to master if node status does not change. Kubelet will ignore this frequency and post node status immediately if any change is detected. It is only used when node lease feature is enabled. nodeStatusReportFrequency''s default value is 1m. But if nodeStatusUpdateFrequency is set explicitly, nodeStatusReportFrequency''s default value will be set to nodeStatusUpdateFrequency for backward compatibility. Default: "1m"'
                                    type: string
                                  nodeStatusUpdateFrequency:
                                    description: 'nodeStatusUpdateFrequency is the frequency that kubelet computes node status. If node lease feature is not enabled, it is also the frequency that kubelet posts node status to master. Note: When node lease feature is not enabled, be cautious when changing the constant, it must work with nodeMonitorGracePeriod in nodecontroller. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact node scalability, and also that the node controller''s nodeMonitorGracePeriod must be set to N*NodeStatusUpdateFrequency, where N is the number of retries before the node controller marks the node unhealthy. Default: "10s"'
                                    type: string
                                  oomScoreAdj:
                                    description: 'oomScoreAdj is The oom-score-adj value for kubelet process. Values must be within the range [-1000, 1000]. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact the stability of nodes under memory pressure. Default: -999'
                                    format: int32
                                    type: integer
                                  podCIDR:
                                    description: 'The CIDR to use for pod IP addresses, only used in standalone mode. In cluster mode, this is obtained from the master. Dynamic Kubelet Config (beta): This field should always be set to the empty default. It should only set for standalone Kubelets, which cannot use Dynamic Kubelet Config. Default: ""'
                                    type: string
                                  podPidsLimit:
                                    description: 'PodPidsLimit is the maximum number of pids in any pod. Requires the SupportPodPidsLimit feature gate to be enabled. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that lowering it may prevent container processes from forking after the change. Default: -1'
                                    format: int64
                                    type: integer
                                  podsPerCore:
                                    description: 'podsPerCore is the maximum number of pods per core. Cannot exceed MaxPods. If 0, this field is ignored. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that changes may cause Pods to fail admission on Kubelet restart, and may change the value reported in Node.Status.Capacity[v1.ResourcePods], thus affecting future scheduling decisions. Increasing this value may also decrease performance, as more Pods can be packed into a single node. Default: 0'
                                    format: int32
                                    type: integer
                                  port:
                                    description: 'port is the port for the Kubelet to serve on. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Default: 10250'
                                    format: int32
                                    type: integer
                                  protectKernelDefaults:
                                    description: 'protectKernelDefaults, if true, causes the Kubelet to error if kernel flags are not as it expects. Otherwise the Kubelet will attempt to modify kernel flags to match its expectation. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that enabling it may cause the Kubelet to crash-loop if the Kernel is not configured as Kubelet expects. Default: false'
                                    type: boolean
                                  qosReserved:
                                    additionalProperties:
                                      type: string
                                    description: 'qosReserved is a set of resource name to percentage pairs that specify the minimum percentage of a resource reserved for exclusive use by the guaranteed QoS tier. Currently supported resources: "memory" Requires the QOSReserved feature gate to be enabled. Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: nil'
                                    type: object
                                  readOnlyPort:
                                    description: 'readOnlyPort is the read-only port for the Kubelet to serve on with no authentication/authorization. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Default: 0 (disabled)'
                                    format: int32
                                    type: integer
                                  registryBurst:
                                    description: 'registryBurst is the maximum size of bursty pulls, temporarily allows pulls to burst to this number, while still not exceeding registryPullQPS. Only used if registryPullQPS > 0. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact scalability by changing the amount of traffic produced by image pulls. Default: 10'
                                    format: int32
                                    type: integer
                                  registryPullQPS:
                                    description: 'registryPullQPS is the limit of registry pulls per second. Set to 0 for no limit. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact scalability by changing the amount of traffic produced by image pulls. Default: 5'
                                    format: int32
                                    type: integer
                                  reservedSystemCPUs:
                                    description: This ReservedSystemCPUs option specifies the cpu list reserved for the host level system threads and kubernetes related threads. This provide a "static" CPU list rather than the "dynamic" list by system-reserved and kube-reserved. This option overwrites CPUs provided by system-reserved and kube-reserved.
                                    type: string
                                  resolvConf:
                                    description: 'ResolverConfig is the resolver configuration file used as the basis for the container DNS resolution configuration. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that changes will only take effect on Pods created after the update. Draining the node is recommended before changing this field. Default: "/etc/resolv.conf"'
                                    type: string
                                  rotateCertificates:
                                    description: 'rotateCertificates enables client certificate rotation. The Kubelet will request a new certificate from the certificates.k8s.io API. This requires an approver to approve the certificate signing requests. The RotateKubeletClientCertificate feature must be enabled. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that disabling it may disrupt the Kubelet''s ability to authenticate with the API server after the current certificate expires. Default: false'
                                    type: boolean
                                  runtimeRequestTimeout:
                                    description: 'runtimeRequestTimeout is the timeout for all runtime requests except long running requests - pull, logs, exec and attach. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Default: "2m"'
                                    type: string
                                  serializeImagePulls:
                                    description: 'serializeImagePulls when enabled, tells the Kubelet to pull images one at a time. We recommend *not* changing the default value on nodes that run docker daemon with version  < 1.9 or an Aufs storage backend. Issue #10959 has more details. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact the performance of image pulls. Default: true'
                                    type: boolean
                                  serverTLSBootstrap:
                                    description: 'serverTLSBootstrap enables server certificate bootstrap. Instead of self signing a serving certificate, the Kubelet will request a certificate from the certificates.k8s.io API. This requires an approver to approve the certificate signing requests. The RotateKubeletServerCertificate feature must be enabled. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that disabling it will stop the renewal of Kubelet server certificates, which can disrupt components that interact with the Kubelet server in the long term, due to certificate expiration. Default: false'
                                    type: boolean
                                  showHiddenMetricsForVersion:
                                    description: 'The previous version for which you want to show hidden metrics. Only the previous minor version is meaningful, other values will not be allowed. The format is <major>.<minor>, e.g.: ''1.16''. The purpose of this format is make sure you have the opportunity to notice if the next release hides additional metrics, rather than being surprised when they are permanently removed in the release after that. Default: ""'
                                    type: string
                                  staticPodPath:
                                    description: 'staticPodPath is the path to the directory containing local (static) pods to run, or the path to a single static pod file. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that the set of static pods specified at the new path may be different than the ones the Kubelet initially started with, and this may disrupt your node. Default: ""'
                                    type: string
                                  staticPodURL:
                                    description: 'staticPodURL is the URL for accessing static pods to run Dynamic Kubelet Config (beta): If dynamically updating this field, consider that the set of static pods specified at the new URL may be different than the ones the Kubelet initially started with, and this may disrupt your node. Default: ""'
                                    type: string
                                  staticPodURLHeader:
                                    additionalProperties:
                                      items:
                                        type: string
                                      type: array
                                    description: 'staticPodURLHeader is a map of slices with HTTP headers to use when accessing the podURL Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt the ability to read the latest set of static pods from StaticPodURL. Default: nil'
                                    type: object
                                  streamingConnectionIdleTimeout:
                                    description: 'streamingConnectionIdleTimeout is the maximum time a streaming connection can be idle before the connection is automatically closed. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may impact components that rely on infrequent updates over streaming connections to the Kubelet server. Default: "4h"'
                                    type: string
                                  syncFrequency:
                                    description: 'syncFrequency is the max period between synchronizing running containers and config. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that shortening this duration may have a negative performance impact, especially as the number of Pods on the node increases. Alternatively, increasing this duration will result in longer refresh times for ConfigMaps and Secrets. Default: "1m"'
                                    type: string
                                  systemCgroups:
                                    description: 'systemCgroups is absolute name of cgroups in which to place all non-kernel processes that are not already in a container. Empty for no container. Rolling back the flag requires a reboot. Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: ""'
                                    type: string
                                  systemReserved:
                                    additionalProperties:
                                      type: string
                                    description: 'systemReserved is a set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=150G) pairs that describe resources reserved for non-kubernetes components. Currently only cpu and memory are supported. See http://kubernetes.io/docs/user-guide/compute-resources for more detail. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may not be possible to increase the reserved resources, because this requires resizing cgroups. Always look for a NodeAllocatableEnforced event after updating this field to ensure that the update was successful. Default: nil'
                                    type: object
                                  systemReservedCgroup:
                                    description: 'This flag helps kubelet identify absolute name of top level cgroup used to enforce `SystemReserved` compute resource reservation for OS system daemons. Refer to [Node Allocatable](https://git.k8s.io/community/contributors/design-proposals/node/node-allocatable.md) doc for more information. Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: ""'
                                    type: string
                                  tlsCertFile:
                                    description: 'tlsCertFile is the file containing x509 Certificate for HTTPS. (CA cert, if any, concatenated after server cert). If tlsCertFile and tlsPrivateKeyFile are not provided, a self-signed certificate and key are generated for the public address and saved to the directory passed to the Kubelet''s --cert-dir flag. Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Default: ""'
                                    type: string
                                  tlsCipherSuites:
                                    description: 'TLSCipherSuites is the list of allowed cipher suites for the server. Values are from tls package constants (https://golang.org/pkg/crypto/tls/#pkg-constants). Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Default: nil'
                                    items:
                                      type: string
                                    type: array
                                  tlsMinVersion:
                                    description: 'TLSMinVersion is the minimum TLS version supported. Values are from tls package constants (https://golang.org/pkg/crypto/tls/#pkg-constants). Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Default: ""'
                                    type: string
                                  tlsPrivateKeyFile:
                                    description: 'tlsPrivateKeyFile is the file containing x509 private key matching tlsCertFile Dynamic Kubelet Config (beta): If dynamically updating this field, consider that it may disrupt components that interact with the Kubelet server. Default: ""'
                                    type: string
                                  topologyManagerPolicy:
                                    description: 'TopologyManagerPolicy is the name of the policy to use. Policies other than "none" require the TopologyManager feature gate to be enabled. Dynamic Kubelet Config (beta): This field should not be updated without a full node reboot. It is safest to keep this value the same as the local config. Default: "none"'
                                    type: string
                                  volumeStatsAggPeriod:
                                    description: 'How frequently to calculate and cache volume disk usage for all pods Dynamic Kubelet Config (beta): If dynamically updating this field, consider that shortening the period may carry a performance impact. Default: "1m"'
                                    type: string
                                type: object
                              kubeletExtraArgs:
                                additionalProperties:
                                  type: string
                                type: object
                              kubernetesVersion:
                                type: string
                              podSubnet:
                                type: string
                              serviceSubnet:
                                type: string
                              taints:
                                items:
                                  description: The node this Taint is attached to has the "effect" on any pod that does not tolerate the Taint.
                                  properties:
                                    effect:
                                      description: Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
                                      type: string
                                    key:
                                      description: Required. The taint key to be applied to a node.
                                      type: string
                                    timeAdded:
                                      description: TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.
                                      format: date-time
                                      type: string
                                    value:
                                      description: The taint value corresponding to the taint key.
                                      type: string
                                  required:
                                  - effect
                                  - key
                                  type: object
                                type: array
                            type: object
                        type: object
                    type: object
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: false
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: CritConfigTemplate is the Schema for the critconfigtemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CritConfigTemplateSpec defines the desired state of CritConfigTemplate
            properties:
              template:
                description: CritConfigTemplateResource defines the Template structure
                properties:
                  spec:
                    description: CritConfigSpec defines the desired state of CritConfig
                    properties:
                      config:
                        description: Config refers to either a crit ControlPlaneConfiguration or WorkerConfiguration.
                        type: string
                      files:
                        description: Config *unstructured.Unstructured `json:"config,omitempty"` Files specifies extra files to be passed to user_data upon creation.
                        items:
                          description: File defines the input for generating write_files in cloud-init.
                          properties:
                            content:
                              description: Content is the actual content of the file.
                              type: string
                            encoding:
                              description: Encoding specifies the encoding of the file contents.
                              enum:
                              - base64
                              - gzip
                              - gzip+base64
                              type: string
                            owner:
                              description: Owner specifies the ownership of the file, e.g. "root:root".
                              type: string
                            path:
                              description: Path specifies the full path on disk where to store the file.
                              type: string
                            permissions:
                              description: Permissions specifies the permissions to assign to the file, e.g. "0640".
                              type: string
                          required:
                          - content
                          - path
                          type: object
                        type: array
                      format:
                        description: Format specifies the output format of the bootstrap data
                        enum:
                        - cloud-config
                        type: string
                      ntp:
                        description: NTP specifies NTP configuration
                        properties:
                          enabled:
                            description: Enabled specifies whether NTP should be enabled
                            type: boolean
                          servers:
                            description: Servers specifies which NTP servers to use
                            items:
                              type: string
                            type: array
                        type: object
                      postCritCommands:
                        description: PostCritCommands specifies extra commands to run after crit runs
                        items:
                          type: string
                        type: array
                      preCritCommands:
                        description: PreCritCommands specifies extra commands to run before crit runs
                        items:
                          type: string
                        type: array
                      users:
                        description: Users specifies extra users to add
                        items:
                          description: User defines the input for a generated user in cloud-init.
                          properties:
                            gecos:
                              description: Gecos specifies the gecos to use for the user
                              type: string
                            groups:
                              description: Groups specifies the additional groups for the user
                              type: string
                            homeDir:
                              description: HomeDir specifies the home directory to use for the user
                              type: string
                            inactive:
                              description: Inactive specifies whether to mark the user as inactive
                              type: boolean
                            lockPassword:
                              description: LockPassword specifies if password login should be disabled
                              type: boolean
                            name:
                              description: Name specifies the user name
                              type: string
                            passwd:
                              description: Passwd specifies a hashed password for the user
                              type: string
                            primaryGroup:
                              description: PrimaryGroup specifies the primary group for the user
                              type: string
                            shell:
                              description: Shell specifies the user's shell
                              type: string
                            sshAuthorizedKeys:
                              description: SSHAuthorizedKeys specifies a list of ssh authorized keys for the user
                              items:
                                type: string
                              type: array
                            sudo:
                              description: Sudo specifies a sudo role for the user
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      verbosity:
                        type: boolean
                    required:
                    - config
                    type: object
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
